# Generated by Django 2.2.5 on 2019-09-28 12:40

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Account UUID')),
                ('full_name', models.CharField(max_length=135, verbose_name="Account's Full Name")),
                ('short_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Account Short Name')),
                ('url', models.CharField(blank=True, max_length=165, null=True, verbose_name="Account's Website URL")),
                ('description', models.TextField(blank=True, max_length=765, null=True, verbose_name='Description/Notes')),
                ('link_to_description_relationship', models.CharField(blank=True, max_length=165, null=True, verbose_name='Link to Description of Relationship')),
                ('link_to_due_diligence', models.CharField(blank=True, max_length=165, verbose_name='Link to Due Diligence')),
                ('singular_label', models.CharField(blank=True, default='Account', max_length=135, verbose_name='Account Singular Label')),
                ('plural_label', models.CharField(blank=True, default='Accounts', max_length=135, verbose_name='Account Plural Label')),
                ('organization_identifier', models.CharField(blank=True, max_length=100, verbose_name='Account Identifier')),
                ('organization_status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=100, verbose_name='Account Status')),
                ('create_date', models.DateTimeField(blank=True, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, null=True, verbose_name='Modified Date')),
            ],
            options={
                'verbose_name_plural': 'Accounts',
                'ordering': ('full_name',),
            },
        ),
        migrations.CreateModel(
            name='AccountSubType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_type_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Account Sub-Type UUID')),
                ('sub_type', models.CharField(max_length=100, unique=True, verbose_name='Account Sub-Type')),
                ('create_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Edit Date')),
            ],
            options={
                'verbose_name_plural': 'Account Sub Types',
                'ordering': ('create_date',),
            },
        ),
        migrations.CreateModel(
            name='AccountType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Account Type UUID')),
                ('type', models.CharField(max_length=100, unique=True, verbose_name='Account Type')),
                ('create_date', models.DateTimeField(blank=True, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, null=True, verbose_name='Edit Date')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='org_type_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('modified_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='org_type_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='Modified By')),
            ],
            options={
                'verbose_name_plural': 'Account Types',
                'ordering': ('create_date',),
            },
        ),
        migrations.CreateModel(
            name='AdministrativeLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin_level_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Admin Level UUID')),
                ('level_1', models.CharField(blank=True, max_length=100, verbose_name='Administrative IndicatorLevel 1')),
                ('level_2', models.CharField(blank=True, max_length=100, verbose_name='Administrative IndicatorLevel 2')),
                ('level_3', models.CharField(blank=True, max_length=100, verbose_name='Administrative IndicatorLevel 3')),
                ('level_4', models.CharField(blank=True, max_length=100, verbose_name='Administrative IndicatorLevel 4')),
                ('create_date', models.DateTimeField(blank=True, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, null=True, verbose_name='Modified Date')),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='admin_level_account', to='circlescore.Account')),
            ],
            options={
                'verbose_name_plural': 'Administrative Levels',
                'ordering': ('level_1',),
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Contact UUID')),
                ('first_name', models.CharField(max_length=100, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Last Name')),
                ('singular_label', models.CharField(default='Contact', max_length=100, verbose_name='Singular Label')),
                ('plural_label', models.CharField(default='Contacts', max_length=100, verbose_name='Plural Label')),
                ('email', models.CharField(blank=True, max_length=100, null=True, verbose_name='Email Address')),
                ('phone', models.CharField(blank=True, max_length=25, null=True, verbose_name='Phone Number')),
                ('street', models.CharField(blank=True, max_length=100, null=True, verbose_name='City')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='City')),
                ('zip_code', models.CharField(blank=True, max_length=25, null=True, verbose_name='Zip/Postal Code')),
                ('state', models.CharField(blank=True, max_length=100, null=True, verbose_name='State/Province')),
                ('country', models.CharField(blank=True, max_length=100, null=True, verbose_name='Country')),
                ('create_date', models.DateTimeField(blank=True, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, null=True, verbose_name='Modified Date')),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contact_account', to='circlescore.Account')),
            ],
            options={
                'verbose_name_plural': 'Contacts',
                'ordering': ('first_name',),
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Country UUID')),
                ('country', models.CharField(blank=True, max_length=255, verbose_name='Country Name')),
                ('code', models.CharField(blank=True, max_length=4, verbose_name='2 Letter Country Code')),
                ('description', models.TextField(blank=True, max_length=765, verbose_name='Description/Notes')),
                ('latitude', models.CharField(blank=True, max_length=255, null=True, verbose_name='Latitude')),
                ('longitude', models.CharField(blank=True, max_length=255, null=True, verbose_name='Longitude')),
                ('zoom', models.IntegerField(default=5, verbose_name='Zoom')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Countries',
                'ordering': ('country',),
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Document UUID')),
                ('name', models.CharField(blank=True, max_length=135, null=True, verbose_name='Name of Document')),
                ('url', models.CharField(blank=True, max_length=135, null=True, verbose_name='URL (Link to document or document repository)')),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Edit Date')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='document_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('modified_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='document_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='Modified By')),
            ],
            options={
                'verbose_name_plural': 'Documents',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='FundingStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('funding_status_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Funding Status UUID')),
                ('status', models.CharField(max_length=165, verbose_name='Funding Status')),
                ('create_date', models.DateTimeField(blank=True, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, null=True, verbose_name='Modified Date')),
            ],
            options={
                'verbose_name_plural': 'Funding Statuses',
                'ordering': ('create_date',),
            },
        ),
        migrations.CreateModel(
            name='HikayaUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hikaya_user_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Hikaya User UUID')),
                ('title', models.CharField(blank=True, choices=[('mr', 'Mr.'), ('mrs', 'Mrs.'), ('ms', 'Ms.')], max_length=3, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Full Name')),
                ('employee_number', models.IntegerField(blank=True, null=True, verbose_name='Employee Number')),
                ('privacy_disclaimer_accepted', models.BooleanField(default=False)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='hikaya_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Location UUID')),
                ('name', models.CharField(max_length=100, verbose_name='Site Name')),
                ('status', models.CharField(blank=True, choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=100, verbose_name='Location Status')),
                ('latitude', models.DecimalField(decimal_places=16, default=Decimal('0.00'), max_digits=25, verbose_name='Latitude Coordinates')),
                ('longitude', models.DecimalField(decimal_places=16, default=Decimal('0.00'), max_digits=25, verbose_name='Longitude Coordinates')),
                ('create_date', models.DateTimeField(blank=True, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, null=True, verbose_name='Modified Date')),
                ('admin_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='circlescore.AdministrativeLevel', verbose_name='Administrative Levels')),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='circlescore.Contact', verbose_name='Location Contact')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='circlescore.Country', verbose_name='Country of Location')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='location_created_by', to='circlescore.HikayaUser', verbose_name='Created by')),
                ('modified_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='location_modified_by', to='circlescore.HikayaUser', verbose_name='Modified By')),
            ],
            options={
                'verbose_name_plural': 'Sites',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Office',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('office_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Office UUID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Office Name')),
                ('code', models.CharField(blank=True, max_length=255, verbose_name='Office Code')),
                ('create_date', models.DateTimeField(blank=True, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, null=True, verbose_name='Modified Date')),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='office_account', to='circlescore.Account')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='office_created_by', to='circlescore.HikayaUser', verbose_name='Created By')),
                ('modified_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='office_modified_by', to='circlescore.HikayaUser', verbose_name='Modified By')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('portfolio_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Portfolio UUID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Portfolio Name')),
                ('create_date', models.DateTimeField(editable=False, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(editable=False, null=True, verbose_name='Modified Date')),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='portfolio_account', to='circlescore.Account')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='portfolio_created_by', to='circlescore.HikayaUser', verbose_name='Created Vy')),
                ('modified_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='portfolio_modified_by', to='circlescore.HikayaUser', verbose_name='Modified By')),
            ],
            options={
                'verbose_name_plural': 'Portfolios',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sector_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Sector UUID')),
                ('sector', models.CharField(max_length=255, verbose_name='Sector Name')),
                ('create_date', models.DateTimeField(blank=True, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, null=True, verbose_name='Modified Date')),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sector_account', to='circlescore.Account')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sector_created_by', to='circlescore.HikayaUser', verbose_name='Created By')),
                ('modified_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sector_modified_by', to='circlescore.HikayaUser', verbose_name='Modified By')),
                ('parent_sector', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sub_sectors', to='circlescore.Sector')),
            ],
            options={
                'verbose_name_plural': 'Location',
                'ordering': ('sector',),
            },
        ),
        migrations.CreateModel(
            name='WorkflowLevel1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workflow_level1_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Workflow Level 1 UUID')),
                ('name', models.CharField(max_length=255, verbose_name='Workflow Level 1 Name')),
                ('workflow_level1_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='Workflow Level 1 Code')),
                ('description', models.TextField(blank=True, max_length=765, null=True, verbose_name='Workflow Level 1 Description')),
                ('start_date', models.DateTimeField(blank=True, null=True, verbose_name='Start Date')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='End Date')),
                ('create_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Create Date')),
                ('edit_date', models.DateTimeField(blank=True, null=True, verbose_name='Edit Date')),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='circlescore.Account')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wfl1_created_by', to='circlescore.HikayaUser', verbose_name='Created By')),
                ('funding_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='circlescore.FundingStatus', verbose_name='Funding Status')),
                ('modified_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wfl1_modified_by', to='circlescore.HikayaUser', verbose_name='Modified By')),
                ('portfolio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='circlescore.Portfolio')),
                ('sector', models.ManyToManyField(blank=True, help_text='Workflow Level 1 sectors', to='circlescore.Sector')),
            ],
            options={
                'verbose_name_plural': 'WorkflowLevel 1s',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='WorkflowLevel2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workflow_level2_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Workflow Level 2/3 UUID')),
                ('name', models.CharField(max_length=255, verbose_name='Workflow IndicatorLevel 2/3 Name')),
                ('description', models.TextField(blank=True, max_length=765, null=True, verbose_name='Workflow Level 2/3 Description')),
                ('workflow_level2_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='Workflow Level2 Code')),
                ('start_date', models.DateTimeField(blank=True, null=True, verbose_name='Start Date')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='End Date')),
                ('create_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, null=True, verbose_name='Modified Date')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wfl2_created_by', to='circlescore.HikayaUser', verbose_name='Created By')),
                ('implementation_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='circlescore.Location', verbose_name='Implementation Location Tag')),
                ('modified_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wfl2_modified_by', to='circlescore.HikayaUser', verbose_name='Modified By')),
                ('office_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='circlescore.Office', verbose_name='Office Location Tag')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='workflow_level3s', to='circlescore.WorkflowLevel2')),
                ('staff_responsible', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='circlescore.Contact', verbose_name='Staff Responsible')),
                ('workflow_level1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='circlescore.WorkflowLevel1')),
            ],
            options={
                'verbose_name_plural': 'Workflow Level 2/3s',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Workspace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Workspace UUID')),
                ('name', models.CharField(max_length=36, verbose_name='Workspace Name')),
                ('url', models.CharField(blank=True, max_length=100, verbose_name='Workspace Url')),
                ('description', models.TextField(blank=True, max_length=765, verbose_name='Workspace Description')),
                ('workflow_level_1', models.CharField(default='Project', max_length=36)),
                ('workflow_level_2', models.CharField(default='Activity', max_length=36)),
                ('workflow_level_3', models.CharField(default='Sub-Activity', max_length=36)),
                ('workflow_level_4', models.CharField(default='Task', max_length=36, verbose_name='Organization/Account Label')),
                ('account_label', models.CharField(default='Account', max_length=36)),
                ('indicator_label', models.CharField(default='Indicator', max_length=36)),
                ('form_label', models.CharField(default='Forms', max_length=36)),
                ('site_label', models.CharField(default='Sites', max_length=36)),
                ('create_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Edit Date')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='workspace_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('modified_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='workspace_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='Modified By')),
            ],
            options={
                'verbose_name_plural': 'Workspaces',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='WorkflowStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Workflow Status UUID')),
                ('status', models.CharField(max_length=100, verbose_name='Workflow Status')),
                ('create_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, null=True, verbose_name='Modified Date')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wfl_status_created_by', to='circlescore.HikayaUser', verbose_name='Created By')),
                ('modified_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wfl_status_modified_by', to='circlescore.HikayaUser', verbose_name='Modified By')),
            ],
            options={
                'verbose_name_plural': 'Workflow Statuses',
                'ordering': ('create_date',),
            },
        ),
        migrations.CreateModel(
            name='WorkflowLevel2Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Workflow IndicatorLevel 2 Type UUID')),
                ('type', models.CharField(max_length=100, unique=True, verbose_name='Workflow IndicatorLevel 2 Type')),
                ('create_date', models.DateTimeField(blank=True, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, null=True, verbose_name='Modified Date')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='level2_type_created_by', to='circlescore.HikayaUser', verbose_name='Created By')),
                ('modified_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='level2_type_modified_by', to='circlescore.HikayaUser', verbose_name='Modified By')),
            ],
            options={
                'verbose_name_plural': 'Workflow Level2 Types',
                'ordering': ('create_date',),
            },
        ),
        migrations.CreateModel(
            name='WorkflowLevel2Plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workflow_level2_plan_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Workflow Level2 Plan UUID')),
                ('name', models.CharField(max_length=150, verbose_name='Workflow Level2 Plan  Name')),
                ('description', models.TextField(blank=True, max_length=765, null=True, verbose_name='Workflow Level2 Plan Description')),
                ('create_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, null=True, verbose_name='Modified Date')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wfl2_plan_created_by', to='circlescore.HikayaUser', verbose_name='Created By')),
                ('modified_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wfl2_plan_modified_by', to='circlescore.HikayaUser', verbose_name='Modified By')),
                ('workflow_level1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='circlescore.WorkflowLevel1', verbose_name='Workflow Level 1')),
                ('workflow_level2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='circlescore.WorkflowLevel2', verbose_name='Workflow Level 2')),
            ],
            options={
                'verbose_name_plural': 'Workflow Level 2 Plans',
                'ordering': ('name',),
            },
        ),
        migrations.AddField(
            model_name='workflowlevel2',
            name='workflow_level2_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='circlescore.WorkflowLevel2Type', verbose_name='Workflow Level 2 Type'),
        ),
        migrations.AddField(
            model_name='workflowlevel2',
            name='workflow_sector',
            field=models.ManyToManyField(blank=True, related_name='workflow_sectors', to='circlescore.Sector', verbose_name='Workflow Sector Tag'),
        ),
        migrations.AddField(
            model_name='workflowlevel2',
            name='workflow_status',
            field=models.ForeignKey(blank=True, max_length=100, null=True, on_delete=django.db.models.deletion.SET_NULL, to='circlescore.WorkflowStatus', verbose_name='Workflow Status'),
        ),
        migrations.CreateModel(
            name='WorkflowLevel1Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Workflow IndicatorLevel 1 Type UUID')),
                ('type', models.CharField(max_length=100, unique=True, verbose_name='Workflow IndicatorLevel 1 Type')),
                ('create_date', models.DateTimeField(blank=True, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, null=True, verbose_name='Modified Date')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wfl1_type_created_by', to='circlescore.HikayaUser', verbose_name='Created By')),
                ('modified_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wfl1_type_modified_by', to='circlescore.HikayaUser', verbose_name='Modified By')),
            ],
            options={
                'verbose_name_plural': 'Workflow Level1 Types',
                'ordering': ('create_date',),
            },
        ),
        migrations.AddField(
            model_name='workflowlevel1',
            name='workflow_level1_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='circlescore.WorkflowLevel1Type', verbose_name='Workflow Level 1 Type'),
        ),
        migrations.AddField(
            model_name='workflowlevel1',
            name='workflow_status',
            field=models.ForeignKey(blank=True, max_length=100, null=True, on_delete=django.db.models.deletion.SET_NULL, to='circlescore.WorkflowStatus', verbose_name='Workflow Status'),
        ),
        migrations.AddField(
            model_name='workflowlevel1',
            name='workspace',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='circlescore.Workspace'),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='workspace',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='portfolio_workspace', to='circlescore.Workspace'),
        ),
        migrations.AddField(
            model_name='office',
            name='workspace',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='office_workspace', to='circlescore.Workspace'),
        ),
        migrations.CreateModel(
            name='LocationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_type_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Workspace Sub-Type UUID')),
                ('type', models.CharField(max_length=100, unique=True, verbose_name='Location Type')),
                ('create_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Edit Date')),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='location_type_account', to='circlescore.Account')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='location_type_created_by', to='circlescore.HikayaUser', verbose_name='Created By')),
                ('modified_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='location_type_modified_by', to='circlescore.HikayaUser', verbose_name='Modified By')),
                ('workspace', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='location_type_workspace', to='circlescore.Workspace')),
            ],
            options={
                'verbose_name_plural': 'Location Types',
                'ordering': ('create_date',),
            },
        ),
        migrations.AddField(
            model_name='location',
            name='office',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='circlescore.Office', verbose_name='Location Office'),
        ),
        migrations.AddField(
            model_name='location',
            name='parent_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sub_locations', to='circlescore.Location'),
        ),
        migrations.AddField(
            model_name='location',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='circlescore.LocationType', verbose_name='Location Type'),
        ),
        migrations.AddField(
            model_name='location',
            name='workspace',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='location_workspace', to='circlescore.Workspace'),
        ),
        migrations.CreateModel(
            name='HistoricalWorkspace',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='Workspace UUID')),
                ('name', models.CharField(max_length=36, verbose_name='Workspace Name')),
                ('url', models.CharField(blank=True, max_length=100, verbose_name='Workspace Url')),
                ('description', models.TextField(blank=True, max_length=765, verbose_name='Workspace Description')),
                ('workflow_level_1', models.CharField(default='Project', max_length=36)),
                ('workflow_level_2', models.CharField(default='Activity', max_length=36)),
                ('workflow_level_3', models.CharField(default='Sub-Activity', max_length=36)),
                ('workflow_level_4', models.CharField(default='Task', max_length=36, verbose_name='Organization/Account Label')),
                ('account_label', models.CharField(default='Account', max_length=36)),
                ('indicator_label', models.CharField(default='Indicator', max_length=36)),
                ('form_label', models.CharField(default='Forms', max_length=36)),
                ('site_label', models.CharField(default='Sites', max_length=36)),
                ('create_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Edit Date')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Modified By')),
            ],
            options={
                'verbose_name': 'historical workspace',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalWorkflowStatus',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('status_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='Workflow Status UUID')),
                ('status', models.CharField(max_length=100, verbose_name='Workflow Status')),
                ('create_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, null=True, verbose_name='Modified Date')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.HikayaUser', verbose_name='Created By')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.HikayaUser', verbose_name='Modified By')),
            ],
            options={
                'verbose_name': 'historical workflow status',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalWorkflowLevel2Type',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('type_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='Workflow IndicatorLevel 2 Type UUID')),
                ('type', models.CharField(db_index=True, max_length=100, verbose_name='Workflow IndicatorLevel 2 Type')),
                ('create_date', models.DateTimeField(blank=True, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, null=True, verbose_name='Modified Date')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.HikayaUser', verbose_name='Created By')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.HikayaUser', verbose_name='Modified By')),
            ],
            options={
                'verbose_name': 'historical workflow level2 type',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalWorkflowLevel2Plan',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('workflow_level2_plan_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='Workflow Level2 Plan UUID')),
                ('name', models.CharField(max_length=150, verbose_name='Workflow Level2 Plan  Name')),
                ('description', models.TextField(blank=True, max_length=765, null=True, verbose_name='Workflow Level2 Plan Description')),
                ('create_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, null=True, verbose_name='Modified Date')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.HikayaUser', verbose_name='Created By')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.HikayaUser', verbose_name='Modified By')),
                ('workflow_level1', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.WorkflowLevel1', verbose_name='Workflow Level 1')),
                ('workflow_level2', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.WorkflowLevel2', verbose_name='Workflow Level 2')),
            ],
            options={
                'verbose_name': 'historical workflow level2 plan',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalWorkflowLevel2',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('workflow_level2_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='Workflow Level 2/3 UUID')),
                ('name', models.CharField(max_length=255, verbose_name='Workflow IndicatorLevel 2/3 Name')),
                ('description', models.TextField(blank=True, max_length=765, null=True, verbose_name='Workflow Level 2/3 Description')),
                ('workflow_level2_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='Workflow Level2 Code')),
                ('start_date', models.DateTimeField(blank=True, null=True, verbose_name='Start Date')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='End Date')),
                ('create_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, null=True, verbose_name='Modified Date')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.HikayaUser', verbose_name='Created By')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('implementation_location', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.Location', verbose_name='Implementation Location Tag')),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.HikayaUser', verbose_name='Modified By')),
                ('office_location', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.Office', verbose_name='Office Location Tag')),
                ('parent', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.WorkflowLevel2')),
                ('staff_responsible', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.Contact', verbose_name='Staff Responsible')),
                ('workflow_level1', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.WorkflowLevel1')),
                ('workflow_level2_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.WorkflowLevel2Type', verbose_name='Workflow Level 2 Type')),
                ('workflow_status', models.ForeignKey(blank=True, db_constraint=False, max_length=100, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.WorkflowStatus', verbose_name='Workflow Status')),
            ],
            options={
                'verbose_name': 'historical workflow level2',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalWorkflowLevel1Type',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('type_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='Workflow IndicatorLevel 1 Type UUID')),
                ('type', models.CharField(db_index=True, max_length=100, verbose_name='Workflow IndicatorLevel 1 Type')),
                ('create_date', models.DateTimeField(blank=True, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, null=True, verbose_name='Modified Date')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.HikayaUser', verbose_name='Created By')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.HikayaUser', verbose_name='Modified By')),
            ],
            options={
                'verbose_name': 'historical workflow level1 type',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalWorkflowLevel1',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('workflow_level1_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='Workflow Level 1 UUID')),
                ('name', models.CharField(max_length=255, verbose_name='Workflow Level 1 Name')),
                ('workflow_level1_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='Workflow Level 1 Code')),
                ('description', models.TextField(blank=True, max_length=765, null=True, verbose_name='Workflow Level 1 Description')),
                ('start_date', models.DateTimeField(blank=True, null=True, verbose_name='Start Date')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='End Date')),
                ('create_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Create Date')),
                ('edit_date', models.DateTimeField(blank=True, null=True, verbose_name='Edit Date')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('account', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.Account')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.HikayaUser', verbose_name='Created By')),
                ('funding_status', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.FundingStatus', verbose_name='Funding Status')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.HikayaUser', verbose_name='Modified By')),
                ('portfolio', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.Portfolio')),
                ('workflow_level1_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.WorkflowLevel1Type', verbose_name='Workflow Level 1 Type')),
                ('workflow_status', models.ForeignKey(blank=True, db_constraint=False, max_length=100, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.WorkflowStatus', verbose_name='Workflow Status')),
                ('workspace', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.Workspace')),
            ],
            options={
                'verbose_name': 'historical workflow level1',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSector',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('sector_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='Sector UUID')),
                ('sector', models.CharField(max_length=255, verbose_name='Sector Name')),
                ('create_date', models.DateTimeField(blank=True, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, null=True, verbose_name='Modified Date')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('account', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.Account')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.HikayaUser', verbose_name='Created By')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.HikayaUser', verbose_name='Modified By')),
                ('parent_sector', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.Sector')),
            ],
            options={
                'verbose_name': 'historical sector',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPortfolio',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('portfolio_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='Portfolio UUID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Portfolio Name')),
                ('create_date', models.DateTimeField(editable=False, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(editable=False, null=True, verbose_name='Modified Date')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('account', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.Account')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.HikayaUser', verbose_name='Created Vy')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.HikayaUser', verbose_name='Modified By')),
                ('workspace', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.Workspace')),
            ],
            options={
                'verbose_name': 'historical portfolio',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalOffice',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('office_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='Office UUID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Office Name')),
                ('code', models.CharField(blank=True, max_length=255, verbose_name='Office Code')),
                ('create_date', models.DateTimeField(blank=True, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, null=True, verbose_name='Modified Date')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('account', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.Account')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.HikayaUser', verbose_name='Created By')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.HikayaUser', verbose_name='Modified By')),
                ('workspace', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.Workspace')),
            ],
            options={
                'verbose_name': 'historical office',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLocationType',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('location_type_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='Workspace Sub-Type UUID')),
                ('type', models.CharField(db_index=True, max_length=100, verbose_name='Location Type')),
                ('create_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Edit Date')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('account', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.Account')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.HikayaUser', verbose_name='Created By')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.HikayaUser', verbose_name='Modified By')),
                ('workspace', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.Workspace')),
            ],
            options={
                'verbose_name': 'historical location type',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLocation',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('location_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='Location UUID')),
                ('name', models.CharField(max_length=100, verbose_name='Site Name')),
                ('status', models.CharField(blank=True, choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=100, verbose_name='Location Status')),
                ('latitude', models.DecimalField(decimal_places=16, default=Decimal('0.00'), max_digits=25, verbose_name='Latitude Coordinates')),
                ('longitude', models.DecimalField(decimal_places=16, default=Decimal('0.00'), max_digits=25, verbose_name='Longitude Coordinates')),
                ('create_date', models.DateTimeField(blank=True, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, null=True, verbose_name='Modified Date')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('admin_level', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.AdministrativeLevel', verbose_name='Administrative Levels')),
                ('contact', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.Contact', verbose_name='Location Contact')),
                ('country', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.Country', verbose_name='Country of Location')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.HikayaUser', verbose_name='Created by')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.HikayaUser', verbose_name='Modified By')),
                ('office', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.Office', verbose_name='Location Office')),
                ('parent_location', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.Location')),
                ('type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.LocationType', verbose_name='Location Type')),
                ('workspace', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.Workspace')),
            ],
            options={
                'verbose_name': 'historical location',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalHikayaUser',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('hikaya_user_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='Hikaya User UUID')),
                ('title', models.CharField(blank=True, choices=[('mr', 'Mr.'), ('mrs', 'Mrs.'), ('ms', 'Ms.')], max_length=3, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Full Name')),
                ('employee_number', models.IntegerField(blank=True, null=True, verbose_name='Employee Number')),
                ('privacy_disclaimer_accepted', models.BooleanField(default=False)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('workspace', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.Workspace')),
            ],
            options={
                'verbose_name': 'historical hikaya user',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalFundingStatus',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('funding_status_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='Funding Status UUID')),
                ('status', models.CharField(max_length=165, verbose_name='Funding Status')),
                ('create_date', models.DateTimeField(blank=True, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, null=True, verbose_name='Modified Date')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.HikayaUser', verbose_name='Created By')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.HikayaUser', verbose_name='Modified By')),
            ],
            options={
                'verbose_name': 'historical funding status',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDocument',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('document_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='Document UUID')),
                ('name', models.CharField(blank=True, max_length=135, null=True, verbose_name='Name of Document')),
                ('url', models.CharField(blank=True, max_length=135, null=True, verbose_name='URL (Link to document or document repository)')),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Edit Date')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Modified By')),
            ],
            options={
                'verbose_name': 'historical document',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCurrency',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('currency_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='Currency UUID')),
                ('name', models.CharField(max_length=255, verbose_name='Currency Name')),
                ('symbol', models.CharField(blank=True, max_length=10, verbose_name='Currency Symbol')),
                ('code', models.CharField(blank=True, max_length=20, verbose_name='Currency Code')),
                ('create_date', models.DateTimeField(editable=False, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(editable=False, null=True, verbose_name='Modified Date')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('account', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.Account')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.HikayaUser', verbose_name='Created Vy')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.HikayaUser', verbose_name='Modified By')),
                ('workspace', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.Workspace')),
            ],
            options={
                'verbose_name': 'historical currency',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCountry',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('country_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='Country UUID')),
                ('country', models.CharField(blank=True, max_length=255, verbose_name='Country Name')),
                ('code', models.CharField(blank=True, max_length=4, verbose_name='2 Letter Country Code')),
                ('description', models.TextField(blank=True, max_length=765, verbose_name='Description/Notes')),
                ('latitude', models.CharField(blank=True, max_length=255, null=True, verbose_name='Latitude')),
                ('longitude', models.CharField(blank=True, max_length=255, null=True, verbose_name='Longitude')),
                ('zoom', models.IntegerField(default=5, verbose_name='Zoom')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.HikayaUser', verbose_name='Created by')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.HikayaUser', verbose_name='Modified By')),
                ('workspace', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.Workspace')),
            ],
            options={
                'verbose_name': 'historical country',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalContact',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('contact_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='Contact UUID')),
                ('first_name', models.CharField(max_length=100, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Last Name')),
                ('singular_label', models.CharField(default='Contact', max_length=100, verbose_name='Singular Label')),
                ('plural_label', models.CharField(default='Contacts', max_length=100, verbose_name='Plural Label')),
                ('email', models.CharField(blank=True, max_length=100, null=True, verbose_name='Email Address')),
                ('phone', models.CharField(blank=True, max_length=25, null=True, verbose_name='Phone Number')),
                ('street', models.CharField(blank=True, max_length=100, null=True, verbose_name='City')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='City')),
                ('zip_code', models.CharField(blank=True, max_length=25, null=True, verbose_name='Zip/Postal Code')),
                ('state', models.CharField(blank=True, max_length=100, null=True, verbose_name='State/Province')),
                ('country', models.CharField(blank=True, max_length=100, null=True, verbose_name='Country')),
                ('create_date', models.DateTimeField(blank=True, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, null=True, verbose_name='Modified Date')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('account', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.Account')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.HikayaUser', verbose_name='Created By')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.HikayaUser', verbose_name='Modified By')),
            ],
            options={
                'verbose_name': 'historical contact',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalApproval',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('approval_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='Approval UUID')),
                ('name', models.CharField(max_length=165, verbose_name='Approval Name')),
                ('description', models.TextField(blank=True, max_length=765, verbose_name='Approval Description')),
                ('create_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, null=True, verbose_name='Modified Date')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.HikayaUser', verbose_name='Created By')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.HikayaUser', verbose_name='Modified By')),
            ],
            options={
                'verbose_name': 'historical approval',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAdministrativeLevel',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('admin_level_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='Admin Level UUID')),
                ('level_1', models.CharField(blank=True, max_length=100, verbose_name='Administrative IndicatorLevel 1')),
                ('level_2', models.CharField(blank=True, max_length=100, verbose_name='Administrative IndicatorLevel 2')),
                ('level_3', models.CharField(blank=True, max_length=100, verbose_name='Administrative IndicatorLevel 3')),
                ('level_4', models.CharField(blank=True, max_length=100, verbose_name='Administrative IndicatorLevel 4')),
                ('create_date', models.DateTimeField(blank=True, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, null=True, verbose_name='Modified Date')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('account', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.Account')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.HikayaUser', verbose_name='Created by')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.HikayaUser', verbose_name='Modified By')),
                ('workspace', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.Workspace')),
            ],
            options={
                'verbose_name': 'historical administrative level',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAccountType',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('type_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='Account Type UUID')),
                ('type', models.CharField(db_index=True, max_length=100, verbose_name='Account Type')),
                ('create_date', models.DateTimeField(blank=True, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, null=True, verbose_name='Edit Date')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Modified By')),
                ('workspace', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.Workspace')),
            ],
            options={
                'verbose_name': 'historical account type',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAccountSubType',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('sub_type_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='Account Sub-Type UUID')),
                ('sub_type', models.CharField(db_index=True, max_length=100, verbose_name='Account Sub-Type')),
                ('create_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Edit Date')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('account_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.AccountType', verbose_name='Account Type')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Modified By')),
                ('workspace', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.Workspace')),
            ],
            options={
                'verbose_name': 'historical account sub type',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAccount',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('account_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='Account UUID')),
                ('full_name', models.CharField(max_length=135, verbose_name="Account's Full Name")),
                ('short_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Account Short Name')),
                ('url', models.CharField(blank=True, max_length=165, null=True, verbose_name="Account's Website URL")),
                ('description', models.TextField(blank=True, max_length=765, null=True, verbose_name='Description/Notes')),
                ('link_to_description_relationship', models.CharField(blank=True, max_length=165, null=True, verbose_name='Link to Description of Relationship')),
                ('link_to_due_diligence', models.CharField(blank=True, max_length=165, verbose_name='Link to Due Diligence')),
                ('singular_label', models.CharField(blank=True, default='Account', max_length=135, verbose_name='Account Singular Label')),
                ('plural_label', models.CharField(blank=True, default='Accounts', max_length=135, verbose_name='Account Plural Label')),
                ('organization_identifier', models.CharField(blank=True, max_length=100, verbose_name='Account Identifier')),
                ('organization_status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=100, verbose_name='Account Status')),
                ('create_date', models.DateTimeField(blank=True, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, null=True, verbose_name='Modified Date')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('account_sub_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.AccountSubType')),
                ('account_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.AccountType')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('documentation', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.Document')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Modified By')),
                ('parent_account', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.Account')),
                ('workspace', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='circlescore.Workspace')),
            ],
            options={
                'verbose_name': 'historical account',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='hikayauser',
            name='workspace',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_workspace', to='circlescore.Workspace'),
        ),
        migrations.AddField(
            model_name='hikayauser',
            name='workspaces',
            field=models.ManyToManyField(blank=True, related_name='user_workspaces', to='circlescore.Workspace', verbose_name='Accessible Workspaces'),
        ),
        migrations.AddField(
            model_name='fundingstatus',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fund_status_created_by', to='circlescore.HikayaUser', verbose_name='Created By'),
        ),
        migrations.AddField(
            model_name='fundingstatus',
            name='modified_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fund_status_modified_by', to='circlescore.HikayaUser', verbose_name='Modified By'),
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Currency UUID')),
                ('name', models.CharField(max_length=255, verbose_name='Currency Name')),
                ('symbol', models.CharField(blank=True, max_length=10, verbose_name='Currency Symbol')),
                ('code', models.CharField(blank=True, max_length=20, verbose_name='Currency Code')),
                ('create_date', models.DateTimeField(editable=False, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(editable=False, null=True, verbose_name='Modified Date')),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='currency_account', to='circlescore.Account')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='currency_created_by', to='circlescore.HikayaUser', verbose_name='Created Vy')),
                ('modified_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='currency_modified_by', to='circlescore.HikayaUser', verbose_name='Modified By')),
                ('workspace', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='currency_workspace', to='circlescore.Workspace')),
            ],
            options={
                'verbose_name_plural': 'Currencies',
                'ordering': ('name',),
            },
        ),
        migrations.AddField(
            model_name='country',
            name='created_by',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='country_created_by', to='circlescore.HikayaUser', verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='country',
            name='modified_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='country_modified_by', to='circlescore.HikayaUser', verbose_name='Modified By'),
        ),
        migrations.AddField(
            model_name='country',
            name='workspace',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='circlescore.Workspace'),
        ),
        migrations.AddField(
            model_name='contact',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contact_created_by', to='circlescore.HikayaUser', verbose_name='Created By'),
        ),
        migrations.AddField(
            model_name='contact',
            name='modified_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contact_modified_by', to='circlescore.HikayaUser', verbose_name='Modified By'),
        ),
        migrations.CreateModel(
            name='Approval',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approval_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Approval UUID')),
                ('name', models.CharField(max_length=165, verbose_name='Approval Name')),
                ('description', models.TextField(blank=True, max_length=765, verbose_name='Approval Description')),
                ('create_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Create Date')),
                ('modified_date', models.DateTimeField(blank=True, null=True, verbose_name='Modified Date')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approval_created_by', to='circlescore.HikayaUser', verbose_name='Created By')),
                ('modified_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approval_modified_by', to='circlescore.HikayaUser', verbose_name='Modified By')),
            ],
            options={
                'verbose_name_plural': 'Approvals',
                'ordering': ('name',),
            },
        ),
        migrations.AddField(
            model_name='administrativelevel',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='admin_level_created_by', to='circlescore.HikayaUser', verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='administrativelevel',
            name='modified_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='admin_level_modified_by', to='circlescore.HikayaUser', verbose_name='Modified By'),
        ),
        migrations.AddField(
            model_name='administrativelevel',
            name='workspace',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='admin_level_workspace', to='circlescore.Workspace'),
        ),
        migrations.AddField(
            model_name='accounttype',
            name='workspace',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='account_type_workspace', to='circlescore.Workspace'),
        ),
        migrations.AddField(
            model_name='accountsubtype',
            name='account_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='circlescore.AccountType', verbose_name='Account Type'),
        ),
        migrations.AddField(
            model_name='accountsubtype',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='org_sub_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created By'),
        ),
        migrations.AddField(
            model_name='accountsubtype',
            name='modified_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='org_sub_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='Modified By'),
        ),
        migrations.AddField(
            model_name='accountsubtype',
            name='workspace',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='account_Sub_type_workspace', to='circlescore.Workspace'),
        ),
        migrations.AddField(
            model_name='account',
            name='account_sub_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='circlescore.AccountSubType'),
        ),
        migrations.AddField(
            model_name='account',
            name='account_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='circlescore.AccountType'),
        ),
        migrations.AddField(
            model_name='account',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='org_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created By'),
        ),
        migrations.AddField(
            model_name='account',
            name='documentation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='circlescore.Document'),
        ),
        migrations.AddField(
            model_name='account',
            name='modified_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='org_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='Modified By'),
        ),
        migrations.AddField(
            model_name='account',
            name='parent_account',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='circlescore.Account'),
        ),
        migrations.AddField(
            model_name='account',
            name='workspace',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='account_workspace', to='circlescore.Workspace'),
        ),
    ]
